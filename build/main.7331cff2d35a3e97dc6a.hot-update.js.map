{"version":3,"file":"main.7331cff2d35a3e97dc6a.hot-update.js","sources":["webpack:///./node_modules/react-json-pretty/dist/JSONPretty.js","webpack:///./src/Home.js","webpack:///external \"prop-types\""],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar PropTypes = __importStar(require(\"prop-types\"));\nvar React = __importStar(require(\"react\"));\nfunction getStyleValue(name, theme) {\n    return theme ? theme[name] || '' : '';\n}\nfunction getStyle(name, theme) {\n    var value = getStyleValue(name, theme);\n    return value ? \" style=\\\"\" + value + \"\\\"\" : '';\n}\nvar xssmap = {\n    '\"': '&quot;',\n    '\\'': '&apos;',\n    '&': '&amp;',\n    '>': '&gt;',\n    '<': '&lt',\n};\nfunction xss(s) {\n    if (!s) {\n        return s;\n    }\n    return s.replace(/<|>|&|\"|'/g, function (m) {\n        return xssmap[m];\n    });\n}\nvar JSONPretty = /** @class */ (function (_super) {\n    __extends(JSONPretty, _super);\n    function JSONPretty() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    JSONPretty.prototype.render = function () {\n        var _a = this.props, json = _a.json, data = _a.data, replacer = _a.replacer, space = _a.space, themeClassName = _a.themeClassName, theme = _a.theme, onError = _a.onError, silent = _a.silent, rest = __rest(_a, [\"json\", \"data\", \"replacer\", \"space\", \"themeClassName\", \"theme\", \"onError\", \"silent\"]);\n        var obj = data || json;\n        // See https://facebook.github.io/react/warnings/unknown-prop.html\n        if (typeof obj === 'string') {\n            try {\n                obj = JSON.parse(obj);\n            }\n            catch (e) {\n                if (!silent) {\n                    console.warn(\"[react-json-pretty]: \" + e.message);\n                }\n                if (onError) {\n                    onError(e);\n                }\n                return (React.createElement(\"div\", __assign({}, rest, { dangerouslySetInnerHTML: { __html: \"<pre class=\" + themeClassName + getStyle('main', theme) + \">\" + xss(obj) + \"</pre>\"\n                    } })));\n            }\n        }\n        return (React.createElement(\"div\", __assign({}, rest, { dangerouslySetInnerHTML: { __html: \"<pre class=\" + themeClassName + getStyle('main', theme) + \">\" + this._pretty.call(this, theme, obj, replacer, +space) + \"</pre>\"\n            } })));\n    };\n    // JSON =》 HTML转换器\n    JSONPretty.prototype._pretty = function (theme, obj, replacer, space) {\n        // 逐行匹配，列举：“key”: \"value\" | \"key\": value | \"key\": [ | \"key\": { | \"key\": [],| \"Key\": {},\n        var regLine = /^( *)(\"[^\"]+\": )?(\"[^\"]*\"|[\\w.+-]*)?([,[{]|\\[\\s*\\],?|\\{\\s*\\},?)?$/mg;\n        var text = JSON.stringify(obj, typeof replacer === 'function' ? replacer : null, isNaN(space) ? 2 : space);\n        /* istanbul ignore next */\n        if (!text) {\n            return text;\n        }\n        return text.replace(/&/g, '&amp;').replace(/\\\\\"([^,])/g, '\\\\&quot;$1')\n            .replace(/</g, '&lt;').replace(/>/g, '&gt;')\n            .replace(regLine, this._replace.bind(null, theme));\n    };\n    // 格式化函数\n    JSONPretty.prototype._replace = function (theme, match, ind, key, val, tra) {\n        var spanEnd = '</span>';\n        var keySpan = \"<span class=__json-key__\" + getStyle('key', theme) + \">\";\n        var valSpan = \"<span class=__json-value__\" + getStyle('value', theme) + \">\";\n        var strSpan = \"<span class=__json-string__\" + getStyle('string', theme) + \">\";\n        var booSpan = \"<span class=__json-boolean__\" + getStyle('boolean', theme) + \">\";\n        var sps = ind || '';\n        if (key) {\n            sps = sps + '\"' + keySpan + key.replace(/^\"|\":\\s$/g, '') + spanEnd + '\": ';\n        }\n        if (val) {\n            if (val === 'true' || val === 'false') {\n                sps = sps + booSpan + val + spanEnd;\n            }\n            else {\n                sps = sps + (val[0] === '\"' ? strSpan : valSpan) + val + spanEnd;\n            }\n        }\n        return sps + (tra || '');\n    };\n    JSONPretty.propTypes = {\n        data: PropTypes.any,\n        json: PropTypes.any,\n        replacer: PropTypes.func,\n        silent: PropTypes.bool,\n        space: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        theme: PropTypes.object,\n        themeClassName: PropTypes.string,\n        onError: PropTypes.func\n    };\n    JSONPretty.defaultProps = {\n        data: '',\n        json: '',\n        silent: true,\n        space: 2,\n        themeClassName: '__json-pretty__',\n    };\n    return JSONPretty;\n}(React.Component));\nmodule.exports = JSONPretty;\n","import React from 'react';\nimport logo from './react.svg';\nimport axios from 'axios';\nimport JSONPretty from 'react-json-pretty';\nimport { Input, Icon, Layout, Row, Col, Button, Typography } from 'antd';\nimport autobind from 'autobind-decorator'\n\nconst { TextArea  } = Input;\nconst { Text } = Typography;\nconst { Content, Header } = Layout;\n\nimport './Home.css';\n\nclass Home extends React.Component {\n\tstate = {\n\t\tsource: null,\n\t\tindex: '',\n\t\tquery: '',\n\t\tchange: ''\n\t}\n\t@autobind\n\tchangeItem(key, val) {\n\t\tlet obj = {};\n\t\tobj[key] = val;\n\t\tthis.setState(obj)\n\t}\n\t@autobind\n\tcreateSample() {\n\t\taxios.post('/run', {\n\t\t\t...this.state\n\t\t}).then(res => console.log(res))\n\t}\n\t@autobind\n\tqueryData() {\n\t\taxios.post('/query', {\n\t\t\tindex: this.state.index,\n\t\t\tquery: this.state.query\n\t\t}).then(res => {\n\t\t\tif (res.data.data) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsource: res.data.data\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n  render() {\n\t  const { index, query, source, change } = this.state;\n    return (\n      <div className=\"Home\">\n\t\t\t<Layout>\n\t\t\t\t<Header className=\"header\">\n\t\t\t\t\t<Text type=\"warning\">造数据</Text>\n\t\t\t\t</Header>\n\t\t\t  <Content  style={{ padding: '15px'  }}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t  <Col span={6}>\n\t\t\t\t\t\t\t  <Input placehoder=\"输入索引名称\" value={index} onChange={(e) => this.changeItem(\"index\", e.target.value)}/>\n\t\t\t\t\t\t\t  <TextArea placeholder=\"输入查询语句\" autosize={{minRows: 4, maxRows: 18}} onChange={(e) => this.changeItem(\"query\", e.target.value)} onBlur={this.queryData}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t  <Col span={18}>\n\t\t\t\t\t\t  <JSONPretty data={source}></JSONPretty>\n\t\t\t\t\t\t  <TextArea autosize={{minRows: 8, maxRows: 20}} onChange={(e) => this.changeItem(\"change\", e.target.value)} value={change}/>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={this.createSample}>生成样例</Button>\n\t\t\t\t\t\t<Button type=\"danger\">开始创建</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t  </Content>\n\t\t\t</Layout>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","module.exports = require(\"prop-types\");"],"mappingsjJA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AA1DA;AA6DA;;;;;;;;;;;AC1EA;;;;A","sourceRoot":""}